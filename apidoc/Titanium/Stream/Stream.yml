---
name: Titanium.Stream
summary: Stream module containing stream utility methods.
description: |
    This module provides a set of methods for interacting with
    [IOStream](Titanium.IOStream) objects, including asynchronous versions of the 
    `read` and `write` methods offered by all stream objects. These 
    methods should be used in any place where reading from or writing
    to a stream might block.

    See also:

    * <Titanium.IOStream>
    * <Titanium.BlobStream>
    * <Titanium.BufferStream>
    * <Titanium.Filesystem.FileStream>
    * <Titanium.Network.Socket.TCP>

extends: Titanium.Module
since: "1.7"
platforms: [android, iphone, ipad]
examples: 
  - title: Stream.pump Example
    example: |
        The following example shows how to use the [pump](Titanium.Stream.pump) method.
        
            var pumpCallback = function(arg) {
                if(arg.bytesProcessed == -1) {
                    Ti.API.info("At end of stream.");
                } else {
                    Ti.API.info(String.format("Received %.0f bytes. Total: %.0f bytes.", 
                                arg.bytesProcessed, arg.totalBytesProcessed));
                    // do something useful with the data in arg.buffer
                }
            }
            Ti.Stream.pump(inputStream, pumpCallback, 1024);
  - title: Write Stream to File
    example: |
        The following example uses the [writeStream](Titanium.Stream.writeStream) method
        to copy the contents of an input stream to a file. This can be used for any kind
        of input stream -- `BufferStream`, `FileStream`, or `Socket.TCP`.
        
            var outFileStream = Ti.Filesystem.getFile('outfile.txt').open(Ti.Filesystem.MODE_WRITE);
            
            // writes all data from inputStream to outFileStream in chunks of 1024 bytes
            var bytesWritten = Ti.Stream.writeStream(inputStream, outFileStream, 1024);
            Ti.API.info('Wrote ' + bytesWritten + ' bytes, closing both streams.');
            
            inputStream.close();
            outFileStream.close();


properties:

  - name: MODE_READ
    type: Number
    summary: |
        Use with [createStream](Titanium.Stream.createStream) to open a stream in read
        mode.
    permission: read-only

  - name: MODE_WRITE
    type: Number
    summary: |
        Use with [createStream](Titanium.Stream.createStream) to open a stream in write
        mode.
    permission: read-only

  - name: MODE_APPEND
    type: Number
    summary: |
        Use with [createStream](Titanium.Stream.createStream) to open a stream in append
        mode.
    permission: read-only

methods:
  - name: createStream
    returns:
        type: Titanium.IOStream
    summary: Creates stream from a `Buffer` or `Blob` object.
    description: |
        Returns <Titanium.BufferStream> or <Titanium.BlobStream> depending on whether a
        `Buffer` or `Blob` is provided as the `source` property in `params`.  
        
       
        `Blob` obects are read only. Throws an exception if `MODE_WRITE` or `MODE_APPEND` is 
        specified along with a blob object.
    parameters:

      - name: params
        summary: Parameter object, for specifying the source object and mode.
        type: CreateStreamArgs
        
  - name: read
    summary: Asynchronously reads data from an [IOStream](Titanium.IOStream).
    description: |
        Reads data until the provided buffer is full, or end of stream is detected.
        Does not resize the supplied buffer.

        If the stream is not readable, an error is reported:

        * On iOS, an exception is thrown.

        * On Android, the callback is invoked with an error.

    parameters:

      - name: sourceStream
        summary: Stream to read from.
        type: Titanium.IOStream

      - name: buffer
        summary: Buffer to read into.
        type: Titanium.Buffer

      - name: resultsCallback
        summary: Function to call with the results of the read operation.
        type: Callback<ReadCallbackArgs>

  - name: read
    summary: |
        Asynchronously reads data from an [IOStream](Titanium.IOStream), with length
        and offset.
    description: |
        Attempts to read `length` bytes from the stream.

        If the stream is not readable, an error is reported:

        * On iOS, an exception is thrown.

        * On Android, the callback is invoked with an error.

        Writes data into the provided buffer starting at `offset`, and continuing until the provided 
        buffer is full, or the specified number of bytes have been read, or end of stream
        is reached. Does *not* resize the supplied buffer.
    parameters:

      - name: sourceStream
        summary: Stream to read from.
        type: Titanium.IOStream

      - name: buffer
        summary: Buffer to read into.
        type: Titanium.Buffer

      - name: offset
        summary: Offset to start reading stream data from, in bytes.
        type: Number

      - name: length
        summary: Number of bytes of data to read from the stream.
        type: Number

      - name: resultsCallback
        summary: Function to call with the results of the read operation.
        type: Callback<ReadCallbackArgs>

  - name: readAll
    summary: Reads all data from an [IOStream](Titanium.IOStream).
    description: |
        Returns a newly-allocated buffer.

        Throws an exception if a read error is encountered or data can't be written to the 
        buffer.
    returns:
        type: Titanium.Buffer
    parameters:

      - name: sourceStream
        summary: Stream to read from.
        type: Titanium.IOStream

  - name: readAll
    summary: |
        Asynchronously reads all data from the specified
        [IOStream](Titanium.IOStream).
    description: |
        Writes data from the stream to the provided buffer, resizing it if necessary.

        Throws an exception if a read error is encountered or data can't be written to the 
        buffer.
    parameters:

      - name: sourceStream
        summary: Stream to read from.
        type: Titanium.IOStream

      - name: buffer
        summary: Buffer to read into.
        type: Titanium.Buffer

      - name: resultsCallback
        summary: Function to call with the results of the read operation.
        type: Callback<ReadCallbackArgs>

  - name: write
    summary: Asynchronously writes all data from a buffer to an [IOStream](Titanium.IOStream).
    description: |
        If the output stream is not writable, an error is reported:

        * On iOS, an exception is thrown.

        * On Android, the callback is invoked with an error.
    parameters:

      - name: outputStream
        summary: Stream to write to.
        type: Titanium.IOStream

      - name: buffer
        summary: Buffer to write from.
        type: Titanium.Buffer

      - name: resultsCallback
        summary: Function to call with the results of the read operation.
        type: Callback<WriteCallbackArgs>

  - name: write
    summary: Asynchronously writes a range of data from a buffer to an [IOStream](Titanium.IOStream).
    description: |
        If the output stream is not writable, an error is reported:

        * On iOS, an exception is thrown.

        * On Android, the callback is invoked with an error.

        Data is read from the buffer and written to the stream. Data is read starting
        from position `offset` in the buffer, and continuing until `length` bytes have 
        been written, the end of buffer is reached, or the stream returns an error.

    parameters:

      - name: outputStream
        summary: Stream to write to.
        type: Titanium.IOStream

      - name: buffer
        summary: Buffer to write from.
        type: Titanium.Buffer

      - name: offset
        summary: Offset to start writing buffer data from.
        type: Number

      - name: length
        summary: Bytes of data to write.
        type: Number

      - name: resultsCallback
        summary: Function to call with the results of the write operation.
        type: Callback<WriteCallbackArgs>

  - name: writeStream
    summary: Writes all data from an input stream to an output stream.
    description: |
        Synchronous. Request will block until all data has been written.

        Returns the total number of bytes written.

        If no data can be read from the input stream because the input
        stream is at end of stream, behavior varies by platform:

        *   iOS throws an exception.

        *   Android returns 0.

    returns:
        type: Number
        summary: Number of bytes written.
    parameters:

      - name: inputStream
        summary: Stream to read from.
        type: Titanium.IOStream

      - name: outputStream
        summary: Stream to write to.
        type: Titanium.IOStream

      - name: maxChunkSize
        summary: |
            Maximum number of bytes to copy from `inputStream` to `outputStream` in a 
            single operation.
        type: Number

  - name: writeStream
    summary: Asynchronously writes all data from an input stream to an output stream.
    description: |
        If no data can be read from the input stream because the input
        stream is at end of stream, behavior varies by platform:

        *   iOS throws an exception.

        *   Android calls the callback with `bytesProcessed` set to 0.

    parameters:

      - name: inputStream
        summary: Stream to read from.
        type: Titanium.IOStream

      - name: outputStream
        summary: Stream to write to.
        type: Titanium.IOStream

      - name: maxChunkSize
        summary: |
            Maximum number of bytes to copy from `inputStream` to `outputStream` in a 
            single operation.
        type: Number

      - name: resultsCallback
        summary: Function to call with the results of the `writeStream` operation.
        type: Callback<WriteStreamCallbackArgs>

  - name: pump
    summary: Reads data from input stream and passes it to a handler method.
    description: |
        After the end of the input stream is reached, the handler is called 
        a final time with no data and `bytesProcessed` set to -1 to indicate
        the end of the input data.
    parameters:

      - name: inputStream
        summary: Stream to pump from.
        type: Titanium.IOStream

      - name: handler
        summary: Handler method that will receive data from `inputStream`.
        type: Callback<PumpCallbackArgs>

      - name: maxChunkSize
        summary: |
            Maximum number of bytes to pass to `handler` in a single call.
        type: Number

      - name: isAsync
        summary: Specifies if the `pump` operation should run asynchronously.
        type: Boolean
        optional: true
        default: false

---
name: CreateStreamArgs
summary: Argument passed to [createStream](Titanium.Stream.createStream).
since: "1.7"

properties:

  - name: source
    summary: Object that the stream will read from or write to.
    type: [Titanium.Blob, Titanium.Buffer]

  - name: mode
    summary: Mode to open the stream in.
    description: |
        Can be [MODE_READ](Titanium.Stream.MODE_READ), [MODE_WRITE](Titanium.Stream.MODE_WRITE), or 
        [MODE_APPEND](Titanium.Stream.MODE_APPEND).

        For `Blob` objects, only `MODE_READ` is supported.
    type: Number

---
name: ReadCallbackArgs
summary: |
    Argument passed to the read callback when an asynchronous [read](Titanium.Stream.read) operation
    finishes.
since: "1.7"

properties:
  - name: source
    summary: Stream being read.
    type: Titanium.IOStream

  - name: bytesProcessed
    summary: Number of bytes processed, or -1 in the event of an error or end of stream.
    type: Number

  - name: errorState
    summary: |
        Whether an error was encountered. Set to 1 in the case of an error, 0
        otherwise.
    type: Number
    platforms: [android]

  - name: errorDescription
    summary: Text description of the error.
    type: String


---
name: WriteCallbackArgs
summary: |
    Argument passed to the write callback when an asynchronous
    [write](Titanium.Stream.write) operation
    finishes.
since: "1.7"

properties:
  - name: source
    summary: Stream being written to.
    type: Titanium.IOStream

  - name: bytesProcessed
    summary: Number of bytes processed, or -1 in the event of an error or end of stream.
    type: Number

  - name: errorState
    summary: |
        Whether an error was encountered. Set to 1 in the case of an error, 0
        otherwise.
    type: Number
    platforms: [android]

  - name: errorDescription
    summary: Text description of the error.
    type: String

---
name: WriteStreamCallbackArgs
summary: |
    Argument passed to the callback when an asynchronous
    [writeStream](Titanium.Stream.writeStream) operation finishes.

since: "1.7"

properties:
  - name: fromStream
    summary: Stream being read from.
    type: Titanium.IOStream

  - name: toStream
    summary: Stream being written to.
    type: Titanium.IOStream

  - name: bytesProcessed
    summary: Number of bytes processed, or -1 in the event of an error or end of stream.
    type: Number

  - name: errorState
    summary: |
        Whether an error was encountered. Set to 1 in the case of an error, 0
        otherwise.
    type: Number
    platforms: [android]

  - name: errorDescription
    summary: Text description of the error.
    type: String

---
name: PumpCallbackArgs
summary: |
    Argument passed to the callback each time the 
    [pump](Titanium.Stream.pump) operation has new data to deliver.
description: |
    A callback with `bytesProcessed` set to -1 indicates the end of the 
    pump operation, either because of an error or because the end of the
    stream has been reached.
since: "1.7"

properties:
  - name: source
    summary: Stream being read from.
    type: Titanium.IOStream

  - name: buffer
    summary: Buffer object holding the data currently being pumped to the handler method.
    type: Titanium.Buffer

  - name: bytesProcessed
    summary: |
        Number of bytes being passed to this invocation of the handler, or 
        -1 in the event of an error or end of stream.
    type: Number

  - name: totalBytesProcessed
    summary: |
        Total number of bytes read from the stream so far, 
        including the data passed to this current invocation of the handler.
    type: Number

  - name: errorState
    summary: |
        Whether an error was encountered. Set to 1 in the case of an error, 0
        otherwise.
    type: Number
    platforms: [android]

  - name: errorDescription
    summary: Text description of the error.
    type: String

