---
name: Titanium.UI.TableView
summary: A Table View allows you to create a scrollable table of content in a list-based fashion.
description: |
     A table view can contain a set of [TableViewRow](Titanium.UI.TableViewRow)s, each displaying 
     an item of data. The default `TableViewRow` has properties for adding text, as well as 
     optional images on the left and right sides, and various system-provided indicators, 
     such as check marks. Table view rows can also be fully customized by adding child views, 
     such as labels, buttons, or image views.

     When adding rows to a table view, each row can be passed as a 
     [TableViewRow](Titanium.UI.TableViewRow) object, or as dictionary specifying 
     the properties for a table row, in which case the `TableView` will create 
     `TableViewRow` objects as needed. 
     
     Use the <Titanium.UI.createTableView> method to create a table view.
extends: Titanium.UI.View
since: "0.8"
excludes:
    events: [delete, pinch, swipe, touchmove]

methods:
  - name: appendRow
    summary: Appends one or more rows to the table.
    description: |
        Appends a single row or an array of rows to the end of the table.
        Each row can be passed as a [TableViewRow](Titanium.UI.TableViewRow) object,
        or as dictionary specifying the properties for a table row, in which case
        the `TableView` will create `TableViewRow` objects as needed.

        On iOS, the row(s) can be inserted with animation by specifying a `properties`
        parameter.
    parameters:
      - name: row
        summary: If appending a single row, this should contain only the row being appended.
            If appending multiple rows, this should be an array of the rows being appended.
        type: [Titanium.UI.TableViewRow, Dictionary<Titanium.UI.TableViewRow>, Array<Titanium.UI.TableViewRow>, Array<Dictionary<Titanium.UI.TableViewRow>>]
      - name: properties
        summary: Animation properties, only used on iOS.
        type: TableViewAnimationProperties
        optional: true
    
  - name: deleteRow
    summary: Deletes an existing row.
    description: |
        On iOS, the row can be deleted with animation by specifying a `properties`
        parameter.
    parameters:
      - name: row
        summary: Index of the row to delete.
        type: Number
      - name: properties
        summary: Animation properties. Only used on iOS.
        type: TableViewAnimationProperties
        optional: true
    
  - name: deselectRow
    summary: Programmatically deselects a row.
    parameters:
      - name: row
        summary: Row index to deselect.
        type: Number
    platforms: [iphone,ipad]
    
  - name: insertRowAfter
    summary: Inserts a row after another row.
    description: |
        The row can be passed as a [TableViewRow](Titanium.UI.TableViewRow) object,
        or as dictionary specifying the properties for a table row, in which case
        the `TableView` will create a `TableViewRow` object as needed.

        On iOS, the row(s) can be inserted with animation by specifying a `properties`
        parameter.
    parameters:
      - name: index
        summary: Index of the row to insert after.
        type: Number
      - name: row
        summary: Row to insert.
        type: [Titanium.UI.TableViewRow, Dictionary<Titanium.UI.TableViewRow>]
      - name: properties
        summary: Animation properties. Only used on iOS.
        type: TableViewAnimationProperties
        optional: true
        
  - name: insertRowBefore
    summary: Inserts a row before another row.
    description: |
        The row can be passed as a [TableViewRow](Titanium.UI.TableViewRow) object,
        or as dictionary specifying the properties for a table row, in which case
        the `TableView` will create a `TableViewRow` object as needed.

        On iOS, the row(s) can be inserted with animation by specifying a `properties`
        parameter.
    parameters:
      - name: index
        summary: Index of the row to insert before.
        type: Number
      - name: row
        summary: Row to insert.
        type: [Titanium.UI.TableViewRow, Dictionary<Titanium.UI.TableViewRow>]
      - name: properties
        summary: Animation properties. Only used on iOS.
        type: TableViewAnimationProperties
        optional: true
    
  - name: scrollToIndex
    summary: Scrolls the table view to ensure that the specified row is on screen.
    description: |
        On iOS, specify a <TableViewAnimationProperties> object to control the position that
        the selected row is scrolled to, and whether scrolling is animated.
    parameters:
      - name: index
        summary: Row index to scroll to.
        type: Number
      - name: properties
        summary: Animation properties. Only used on iOS.
        type: TableViewAnimationProperties
        optional: true
        
  - name: scrollToTop
    summary: Scrolls the table to a specific top position where 0 is the topmost y position in the table view.
    description: |
        The behavior of this method is platform-specific.

        On Android, the `top` value is interpreted as a row index that should be scrolled 
        to the top of the screen. The table will not scroll the last row of data higher than
        the bottom of the screen. If there is less than one screenful of data below the 
        specified row, the table doesn't scroll the specified row all the way to the top.
        If the table has less than one screenful of data total, it does not scroll at all.

        On iOS, the `top` value is interpreted as a pixel offset between the top of the top
        row of data and the top of the table view. So a `top` value of 0 scrolls the list to
        the top. A positive value scrolls it down, and a negative value scrolls the list up
        above the first item.
        
        On Mobile Web, the `top` value is interpreted as a pixel offset between the top of the top
        row of data and the top of the table view. So a `top` value of 0 scrolls the list to
        the top. A positive value scrolls it down. Values outside the scrollable range are clipped
        so that negative numbers scroll the list to the top, and large positive values scroll the
        list to the bottom.

        On iOS, specify a <TableViewAnimationProperties> object with `animated` set to `false` to 
        disable the scrolling animation.
    parameters:
      - name: top
        summary: Y position for the top of the table view.
        type: Number
      - name: properties
        summary: Animation properties. Only used on iOS. 
        type: TableViewAnimationProperties
        optional: true
  - name: setContentInsets
    summary: Sets the tableviews content insets.
    description: |
        The distance the content view is inset from the enclosing scroll view.
    parameters:
      - name: edgeInsets
        summary: Dictionary of values specifying the `top` , `bottom`, `left`, `right` insets.
        type: TableViewEdgeInsets
      - name: animated
        summary: Determines whether the content inset change should be animated.
        type: TableViewContentInsetOption
        optional: true
    platforms: [iphone, ipad]
    since: 2.1.0
        
  - name: selectRow
    summary: Programmatically selects a row.
    parameters:
      - name: row
        summary: Row index to select.
        type: Number
    platforms: [iphone, ipad]
    
  - name: setData
    summary: Sets the data in the table.
    description: |
        Each row can be passed either as a `TableViewRow` object, 
        or as a dictionary of `TableViewRow` properties.

        `setData` can also be used to add [TableViewSection](Titanium.UI.TableViewSection)s to a 
        table view.
    parameters:
      - name: data
        summary: Array of rows (or sections).
        type: [ Array<Titanium.UI.TableViewRow>, Array<Dictionary<Titanium.UI.TableViewRow>>, Array<Titanium.UI.TableViewSection> ]
      - name: properties
        summary: Animation properties. Only used on iOS.
        type: TableViewAnimationProperties
        
  - name: updateRow
    summary: Updates an existing row, optionally with animation
    parameters:
      - name: index
        summary: Index of the row to update.
        type: Number
      - name: row
        summary: Row data to update.
        type: Titanium.UI.TableViewRow
      - name: properties
        summary: Animation properties. Only used on iOS.
        type: TableViewAnimationProperties
events:
  - name: click
    summary: Fired when a table row is clicked by the user.
    platforms: [android, iphone, ipad, mobileweb]
    properties:
      - name: index
        summary: Row index.
        type: Number
        
      - name: section
        summary: Table view section object, if the clicked row is contained in a section.
        type: Titanium.UI.TableViewSection
        
      - name: detail
        summary: Boolean to indicate if the detail button was clicked. Only `true` if 
            `row.hasDetail` is `true` and the detail button was clicked.
        type: Boolean
        
      - name: searchMode
        summary: Boolean to indicate if the table is in search mode.
        type: Boolean
        
      - name: rowData
        summary: Dictionary containing the properties set on the row.
        type: Dictionary<Titanium.UI.TableViewRow>
        
      - name: y
        summary: Y coordinate of the event from the `source` view's coordinate system.
        type: Number
        
      - name: x
        summary: X coordinate of the event from the `source` view's coordinate system.
        type: Number

      - name: globalPoint
        summary: |
            Coordinates `x` and `y` describing the location of the event in terms of screen 
            coordinates.
        platforms: [iphone, ipad]
        type: Dictionary
        deprecated:
            since: "1.8.0"

      - name: row
        summary: Table view row object.
        type: Titanium.UI.TableViewRow

  - name: dblclick
    summary: Fired when the device detects a double click against the view.
    platforms: [mobileweb]
    properties:
      - name: globalPoint
        summary: |
            Coordinates `x` and `y` describing the location of the event in terms of screen 
            coordinates.
        platforms: [iphone, ipad]
        type: Dictionary
        deprecated:
            since: "1.8.0"
        
      - name: y
        summary: Y coordinate of the event from the `source` view's coordinate system.
        type: Number
        
      - name: x
        type: Number
        summary: X coordinate of the event from the `source` view's coordinate system.

  - name: delete
    summary: Fired when a table row is deleted by the user.
    platforms: [iphone, ipad, mobileweb]
    properties:
      - name: index
        summary: Row index.
        type: Number
        
      - name: section
        summary: Table view section object, if the deleted row is contained in a section.
        type: Titanium.UI.TableViewSection
        
      - name: detail
        summary: Boolean to indicate if the delete button was clicked. Always `false` for this event.
        type: Boolean
        
      - name: searchMode
        summary: Boolean to indicate if the table is in search mode. Always `false` for this event.
        type: Boolean
        
      - name: rowData
        summary: Dictionary containing the properties set on the row.
        type: Dictionary<Titanium.UI.TableViewRow>
        
      - name: y
        summary: Y coordinate of the event from the `source` view's coordinate system.
        type: Number
        
      - name: x
        summary: X coordinate of the event from the `source` view's coordinate system.
        type: Number
        
      - name: globalPoint
        summary: |
            Coordinates `x` and `y` describing the location of the event in terms of screen 
            coordinates.
        platforms: [iphone, ipad]
        type: Dictionary
        deprecated:
            since: "1.8.0"

      - name: row
        summary: Table view row object.
        type: Titanium.UI.TableViewRow

  - name: doubletap
    summary: Fired when the device detects a double tap against this view.
    platforms: [iphone, ipad, mobileweb]
    properties:
      - name: globalPoint
        summary: |
            Coordinates `x` and `y` describing the location of the event in terms of screen 
            coordinates.
        platforms: [iphone, ipad]
        type: Dictionary
        deprecated:
            since: "1.8.0"
            
      - name: x
        summary: X coordinate of the event from the `source` view's coordinate system.
        type: Number
        
      - name: y
        summary: Y coordinate of the event from the `source` view's coordinate system.
        type: Number
    
  - name: longpress
    summary: Fired when the device detects a long press.
    description: |
        A long press is generated by touching and holding on the touchscreen. Unlike a `longclick`, 
        it does not respond to the trackball button.  
        
        The event occurs before the finger is lifted.   
        
        A `longpress` and a `longclick` can occur together.  
        
        In contrast to a `longclick`, this event returns the `x` and `y` coordinates of the touch.
    properties:
      - name: y
        summary: Y coordinate of the event from the `source` view's coordinate system.
        type: Number
      - name: x
        summary: X coordinate of the event from the `source` view's coordinate system.
        type: Number
    platforms: [android, iphone, ipad]

  - name: move
    summary: Fired when a table row is moved by the user.
    platforms: [iphone, ipad, mobileweb]
    properties:
      - name: index
        summary: Row index.
        type: Number
        
      - name: section
        summary: Table view section object, if the deleted row is contained in a section.
        type: Titanium.UI.TableViewSection
        
      - name: detail
        summary: Boolean to indicate if the right area was clicked. Always `false` for this event.
        type: Boolean
        
      - name: searchMode
        summary: Boolean to indicate if the table is in search mode. Always `false` for this event.
        type: Boolean
        
      - name: rowData
        summary: Dictionary containing the properties set on the row.
        type: Dictionary<Titanium.UI.TableViewRow>
        
      - name: y
        summary: Y coordinate of the event from the `source` view's coordinate system.
        type: Number
        
      - name: x
        summary: X coordinate of the event from the `source` view's coordinate system.
        type: Number

      - name: globalPoint
        summary: |
            Coordinates `x` and `y` describing the location of the event in terms of screen 
            coordinates.
        platforms: [iphone, ipad]
        type: Dictionary
        deprecated:
            since: "1.8.0"

      - name: row
        summary: Table view row object.
        type: Titanium.UI.TableViewRow

  - name: scroll
    summary: Fired when the table view is scrolled.
    platforms: [android, iphone, ipad, mobileweb]
    properties:
      - name: firstVisibleItem
        summary: Row index of the topmost visible row in the view.
        platforms: [android, mobileweb]
        type: Number
        
      - name: visibleItemCount
        summary: Number of rows currently visible in the view.
        platforms: [android, mobileweb]
        type: Number
        
      - name: contentOffset
        summary: Dictionary with `x` and `y` properties containing the content offset.
        platforms: [iphone, ipad, mobileweb]
        type: Point
        
      - name: totalItemCount
        summary: Total number of rows in the view.
        platforms: [android, mobileweb]
        type: Number
        
      - name: y
        summary: Y coordinate of the event from the `source` view's coordinate system.
        type: Number
        
      - name: x
        summary: X coordinate of the event from the `source` view's coordinate system.
        type: Number

      - name: globalPoint
        summary: |
            Coordinates `x` and `y` describing the location of the event in terms of screen 
            coordinates.
        platforms: [iphone, ipad]
        type: Dictionary
        deprecated:
            since: "1.8.0"
        
      - name: contentSize
        summary: Dictionary with `width` and `height` properties containing the size of the content (regardless of the display size in the case of scrolling).
        platforms: [iphone, ipad, mobileweb]
        type: Dictionary
            
      - name: size
        summary: Dictionary with `width` and `height` properties containing the size of the visible table view
        type: Dictionary
        
  - name: scrollEnd
    summary: fired when the table view stops scrolling
    platforms: [android, iphone,ipad, mobileweb]
    properties:
      - name: contentOffset
        summary: Dictionary with `x` and `y` properties containing the content offset.
        platforms: [iphone, ipad, mobileweb]
        type: Point
        
      - name: y
        summary: Y coordinate of the event from the `source` view's coordinate system.
        type: Number
        
      - name: x
        summary: X coordinate of the event from the `source` view's coordinate system.
        type: Number
        
      - name: contentSize
        summary: Dictionary with `width` and `height` properties containing the size of the content (regardless of the display size in the case of scrolling).
        platforms: [iphone, ipad, mobileweb]
        type: Dictionary
        
      - name: globalPoint
        summary: |
            Coordinates `x` and `y` describing the location of the event in terms of screen 
            coordinates.
        platforms: [iphone, ipad]
        type: Dictionary
        deprecated:
            since: "1.8.0"
        
      - name: size
        summary: Dictionary with `width` and `height` properties containing the size of the visible table view.
        type: Dictionary

  - name: singletap
    platforms: [iphone, ipad, mobileweb]
    summary: Fired when the device detects a single tap against the view.
    properties:
      - name: y
        summary: Y coordinate of the event from the `source` view's coordinate system.
        type: Number
        
      - name: x
        summary: X coordinate of the event from the `source` view's coordinate system.
        type: Number

  - name: swipe
    summary: Fired when the device detects a swipe gesture (left or right) against the view.
    platforms: [mobileweb]
    properties:
      - name: direction
        summary: Direction of the swipe--either 'left' or 'right'.
        type: String
        
      - name: globalPoint
        summary: |
            Coordinates `x` and `y` describing the location of the event in terms of screen 
            coordinates.
        platforms: [iphone, ipad]
        type: Dictionary
        deprecated:
            since: "1.8.0"

      - name: y
        summary: Y coordinate of the event's endpoint from the `source` view's coordinate system.
        type: Number
        
      - name: x
        summary: X coordinate of the event's endpoint from the `source` view's coordinate system.
        type: Number
        
  - name: touchcancel
    summary: Fired when a touch gesture is interrupted by the device.
    description: |
        Generated in various circumstances, including an incoming call to allow the UI to clean 
        up state.
    platforms: [iphone, ipad, mobileweb]
    properties:
      - name: globalPoint
        summary: |
            Coordinates `x` and `y` describing the location of the event in terms of screen 
            coordinates.
        platforms: [iphone, ipad]
        type: Dictionary
        deprecated:
            since: "1.8.0"
        
      - name: x
        summary: X coordinate of the event from the `source` view's coordinate system.
        type: Number
        
      - name: y
        summary: Y coordinate of the event from the `source` view's coordinate system.
        type: Number
        
  - name: touchend
    summary: Fired when a touch gesture is complete.
    platforms: [iphone, ipad, mobileweb]
    properties:
      - name: globalPoint
        summary: |
            Coordinates `x` and `y` describing the location of the event in terms of screen 
            coordinates.
        platforms: [iphone, ipad]
        type: Dictionary
        deprecated:
            since: "1.8.0"
        
      - name: x
        summary: X coordinate of the event from the `source` view's coordinate system.
        type: Number
        
      - name: y
        summary: Y coordinate of the event from the `source` view's coordinate system.
        type: Number
        
  - name: touchstart
    summary: Fired as soon as the device detects a touch gesture against this view.
    platforms: [iphone, ipad, mobileweb]
    properties:
      - name: globalPoint
        summary: |
            Coordinates `x` and `y` describing the location of the event in terms of screen 
            coordinates.
        platforms: [iphone, ipad]
        type: Dictionary
        deprecated:
            since: "1.8.0"
        
      - name: x
        summary: X coordinate of the event from the `source` view's coordinate system.
        type: Number
        
      - name: y
        summary: Y coordinate of the event from the `source` view's coordinate system.
        type: Number

  - name: twofingertap
    summary: Fired when the device detects a two-finger tap against the view.
    platforms: [iphone, ipad, mobileweb]
    properties:
      - name: globalPoint
        summary: |
            Coordinates `x` and `y` describing the location of the event in terms of screen 
            coordinates.
        platforms: [iphone, ipad]
        type: Dictionary
        deprecated:
            since: "1.8.0"
        
      - name: y
        summary: Y coordinate of the event from the `source` view's coordinate system.
        type: Number
            
      - name: x
        summary: X coordinate of the event from the `source` view's coordinate system.
        type: Number
        
  - name: dragStart
    summary: Fired when the scrollable region starts being dragged.
    description: |
        A dragging gesture is when a touch remains in contact with the display to physically drag 
        the view, as opposed to it being the result of scrolling momentum.
    platforms: [iphone, ipad]

  - name: dragEnd
    summary: Fired when the scrollable region stops being dragged.
    description: |
        A dragging gesture is when a touch remains in contact with the display to physically drag 
        the view, as opposed to it being the result of scrolling momentum.
    platforms: [iphone, ipad]
    properties:
      - name: decelerate
        summary: |
            Indicates whether scrolling will continue but decelerate, now that the drag gesture has 
            been released by the touch. If `false`, scrolling will stop immediately.
        type: Boolean
        

properties:
  - name: allowsSelection
    summary: True if the rows can be selected.
    type: Boolean
    default: true
    platforms: [iphone, ipad]
    
  - name: allowsSelectionDuringEditing
    summary: True if the rows can be selected while editing the table.
    platforms: [iphone, ipad]
    type: Boolean
    
  - name: backgroundColor
    summary: Background color of the view, as a color name or hex triplet.
    description: |
        For information about color values, see the "Colors" section of <Titanium.UI>. 
        
        On iPhone and iPod Touch only, this property accepts a value of `'stripped'`, in addition to 
        the standard color names described in the link above. This results in a pin-striped gray. 
        Note that, due to a bug, `'stripped'` is misspelt, and so is likely to change in the near 
        future to `'striped'`.
    type: String
    
  - name: data
    summary: Array of objects to be used for the rows of the table view.
    type: [ Array<Titanium.UI.TableViewRow>, Array<Titanium.UI.TableViewSection> ]
    
  - name: editable
    summary: Allow the user to edit the table view (this must be `true` for swipe-to-delete).
    platforms: [iphone, ipad]
    type: Boolean
    default: false
    
  - name: editing
    summary: Boolean to control the editing state of the table view.
    platforms: [iphone, ipad]
    type: Boolean
    default: false
    
  - name: filterAttribute
    summary: Filter attribute to be used when searching. 
    description: |
        This property maps to your data object or a property on the row object. For example,
        if you set `filterAttribute` to `'title'`, the table view shows only those rows that
        contain the current search text in the `title` property.

        Note that the filter is not anchored to the beginning of the string. So typing "ha"
        in the text box will include rows titled 'Harold' and 'Harvard', but also 'Sharon'
        and 'Jonathan'.
    type: String
    platforms: [android, iphone, ipad]
    
  - name: filterCaseInsensitive
    summary: Boolean to indicate if the search should be case sensitive or case insensitive.
    default: true
    type: Boolean
    platforms: [android, iphone, ipad]
    
  - name: footerTitle
    summary: Table view footer title.
    type: String

  - name: hideSearchOnSelection
    summary: Boolean to indicate whether or not the search field should hide on completion.
    description: |
        Once a row is clicked in a search result, if this value is `true`, the search bar is hidden 
        (if appropriate).
        
        Many standard applications (such as Contacts) have a behavior equivalent to `false` for this 
        value, but the default is `true` for legacy reasons.
        
        The Android platform behaves as though this value were `false`.
    type: Boolean
    default: true
    platforms: [iphone, ipad]

  - name: footerView
    summary: Table view footer as a view that will be rendered instead of a label.
    type: Titanium.UI.View
    
  - name: headerTitle
    summary: Table view header title.
    type: String
    
  - name: headerView
    summary: Table view header as a view that will be rendered instead of a label.
    type: Titanium.UI.View
    
  - name: index
    summary: Array of objects (with `title` and `index` properties) to control the table view index.
    description: |
        If an index array is specified, an index bar is displayed on the right-hand side of the 
        table view. Clicking on a title in the index bar scrolls the table view to the row 
        index associated with that title.
    type: Array<TableViewIndexEntry>
    platforms: [iphone, ipad]
    
  - name: maxRowHeight
    summary: Maximum row height for table view rows.
    type: Number
    
  - name: minRowHeight
    summary: Minimum row height for table view rows.
    type: Number
    
  - name: moving
    summary: Boolean to control the moveable state of the table view.
    platforms: [iphone, ipad]
    type: Boolean
    
  - name: rowHeight
    summary: Default row height for table view rows.
    type: Number
    
  - name: scrollable
    summary: If `true`, the tableview can be scrolled.
    type: Boolean
    default: true
    platforms: [iphone,ipad]
    
  - name: search
    summary: Search field to use for the table view.
    type: Titanium.UI.SearchBar
    platforms: [android, iphone, ipad]
    
  - name: searchHidden
    summary: Boolean to control the visibility of the search field.
    type: Boolean
    default: false (search field visible)
    platforms: [iphone, ipad]
    
  - name: separatorColor
    summary: Separator color between rows, as a color name or hex triplet.
    description: |
        For information about color values, see the "Colors" section of <Titanium.UI>. 
    type: String
    default: platform-specific default color
    
  - name: separatorStyle
    summary: Separator style constant. 
    description: |
        For iOS specify one of the [TableViewSeparatorStyle](Titanium.UI.iPhone.TableViewSeparatorStyle) constants.
        For Mobile Web specify one of the [TableViewSeparatorStyle](Titanium.UI.MobileWeb.TableViewSeparatorStyle) constants.
    platforms: [iphone, ipad, mobileweb]
    type: Number
    
  - name: showVerticalScrollIndicator
    summary: Whether table view displays vertical scroll indicator
    platforms: [iphone, ipad]
    default: true
    type: Boolean
    
  - name: style
    summary: Style of the table view, specified using one of the constants from <Titanium.UI.iPhone.TableViewStyle>.
    platforms: [iphone, ipad]
    type: Number
examples:
  - title: Simple Table View with Basic Rows
    example: |
        The most basic example of a table view.
        
            var data = [{title:"Row 1"},{title:"Row 2"}];
            var table = Titanium.UI.createTableView({data:data});
            win.add(table);
        
        
---
name: TableViewAnimationProperties
summary: A simple object for specifying the animation properties to use when inserting or deleting rows, or scrolling the table.
description: |
    These properties are only used on iOS. Not all properties apply to all methods.

    `animationStyle` does not apply to the `scrollToTop` or `scrollToIndex` methods.

    `positon` only applies to the `scrollToIndex` method.
properties:
  - name: animated
    summary: Whether this table change should be animated. Ignored if any `animationStyle` value is specified.
    type: Boolean
    default: true
    
  - name: animationStyle
    summary: Type of animation to use for row insertions and deletions. One of the animation style constants defined in <Titanium.UI.iPhone.RowAnimationStyle>.
    type: Number
    default: If `animated` is `true` but no `animationStyle` is specified, 
        the style defaults to [FADE](Titanium.UI.iPhone.RowAnimationStyle.FADE).
        
  - name: position
    summary: Specifies what position to scroll the selected row to. One of the position constants from <Titanium.UI.iPhone.TableViewScrollPosition>.
    type: Number
    default: <Titanium.UI.iPhone.TableViewScrollPosition.NONE>

---
name: TableViewIndexEntry
summary: A simple object that represents an index entry in a `TableView`.
properties:
  - name: title
    summary: Title to display in the index bar for this item.
    type: String
    
  - name: index
    summary: Row index associated with this item.
    type: Number

---
name: TableViewContentInsetOption
summary: Optional parameter for [setContentInsets](Titanium.UI.TableView.setContentInsets) method.
description: |
    On iOS, the optional parameters `animated` and `duration`to enable the animation and duration 
    for animation while the content insets are updated. For example

        setContentInset({top:50,bottom:100}, {animated:true, duration:3000})
optional: true
since: 2.1.0
platforms: [iphone, ipad]

properties:
  - name: animated
    summary: Determines whether the table view's content inset change is animated.
    type: Boolean
    default: false
  - name: duration
    summary: The duration in `milleseconds` for animation while the content inset is  being changed.
    type: Number

---
name: TableViewEdgeInsets
summary: The parameter for [setContentInsets](Titanium.UI.TableView.setContentInsets) method.
description: |
    On iOS, the parameter `edgeInsets` can be specified to set the distance(`top`, `bottom`,
    `right`, `left`) that the content view is inset from the enclosing scroll view of the table.
    For example

        setContentInset({top:50,bottom:10,right:10,left:10}, {animated:true})
since: 2.1.0
platforms: [iphone, ipad]

properties:
  - name: top
    summary: Value specifying the top insets for the enclosing scroll view of the table.
    type: Number
  - name: left
    summary: Value specifying the left insets for the enclosing scroll view of the table.
    type: Number
  - name: right
    summary: Value specifying the right insets for the enclosing scroll view of the table.
    type: Number
  - name: bottom
    summary: Value specifying the bottom insets for the enclosing scroll view of the table.
    type: Number