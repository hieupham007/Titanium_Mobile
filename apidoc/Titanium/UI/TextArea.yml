---
name: Titanium.UI.TextArea
summary: A multiline text field that supports editing and scrolling. 
description: |
    Use the <Titanium.UI.createTextArea> method to create a text area. 

    On iOS, the `color` property is required for the text area to work
    properly. This is a known issue.
extends: Titanium.UI.View
since: "0.8"
methods:
  - name: blur
    summary: Forces the text area to lose focus.
  - name: focus
    summary: Forces the text area to gain focus.
  - name: hasText
    summary: Returns `true` if the text area contains text, `false` if it is empty.
events:
  - name: blur
    summary: Fired when the text area loses focus.
    properties:
      - name: value
        summary: Value of the text area at the time of the event.
  - name: change
    summary: Fired when the text area value changes.
    properties:
      - name: value
        summary: New value of the text area.
  - name: focus
    summary: Fired when the text area gains focus.
    properties:
      - name: value
        summary: Value of the text area at the time of the event.
  - name: return
    summary: Fired when the return key is pressed on the keyboard.
    properties:
      - name: value
        summary: Value of the text area at the time of the event.
  - name: selected
    summary: Fired when text in the text area is selected.
    properties:
      - name: range
        summary: A range of text. The range is an object with the properties `location` and `length`.
    platforms: [iphone, ipad]
properties:
  - name: appearance
    summary: Determines the appearance of the keyboard displayed when this text area is focused.
    description: |
        Specify one of the following constants from <Titanium.UI>: 
        [KEYBOARD_APPEARANCE_ALERT](Titanium.UI.KEYBOARD_APPEARANCE_ALERT), or
        [KEYBOARD_APPEARANCE_DEFAULT](Titanium.UI.KEYBOARD_APPEARANCE_DEFAULT).
    type: Number
    platforms: [iphone, ipad]
  - name: autoLink
    summary: Automatically convert text within this area to clickable links. 
    description: Specify which type of items should be converted using the `AUTODETECT` constants defined in <Titanium.UI>.
    platforms: [iphone, ipad]
    type: Number
  - name: autocapitalization
    summary: Specifies how text should be capitalized during typing. 
    description: |
        Specify one of the following constants from <Titanium.UI>: 
        [TEXT_AUTOCAPITALIZATION_NONE](Titanium.UI.TEXT_AUTOCAPITALIZATION_NONE), 
        [TEXT_AUTOCAPITALIZATION_WORDS](Titanium.UI.TEXT_AUTOCAPITALIZATION_WORDS), 
        [TEXT_AUTOCAPITALIZATION_SENTENCES](Titanium.UI.TEXT_AUTOCAPITALIZATION_SENTENCES), or 
        [TEXT_AUTOCAPITALIZATION_ALL](Titanium.UI.TEXT_AUTOCAPITALIZATION_ALL).
    platforms: [android,iphone,ipad]
    type: Number
  - name: editable
    summary: Is the text area editable?
    type: Boolean
    default: true
  - name: enabled
    summary: Is the text area enabled?
    type: Boolean
    default: true
  - name: font
    summary: Font to use for text.
    type: Font
  - name: keyboardToolbar
    summary: Array of toolbar button objects to be used when the keyboard is displayed.
    type: Array<Object>
    platforms: [iphone,ipad]
  - name: keyboardToolbarColor
    summary: Color of the keyboard toolbar.
    type: String
    platforms: [iphone,ipad]
  - name: keyboardToolbarHeight
    summary: Height of the keyboard toolbar.
    type: Number
    platforms: [iphone,ipad]
  - name: keyboardType
    summary: Specifies the keyboard type to display when this text area is focused, such as [KEYBOARD_EMAIL](Titanium.UI.KEYBOARD_EMAIL) or [KEYBOARD_NUMBER_PAD](Titanium.UI.KEYBOARD_NUMBER_PAD).
    description: |
        Specify one of the `KEYBOARD` constants from <Titanium.UI>.
        When asking for a specific kind of input, such as a phone number or email 
        address, you should always specify the appropriate keyboard type.
    type: Number
    platforms: [android,iphone,ipad]
    default: the platform's default keyboard
  - name: returnKeyType
    summary: Specifies the text to display on the keyboard **Return** key when this text area is focused.
    description: |
        Specify one of the `RETURNKEY` constants from <Titanium.UI>.
    type: Number
    platforms: [android,iphone,ipad]
    default: the platform's default return key
  - name: suppressReturn
    summary: Should the return key be suppressed during entry?
    type: Boolean
    platforms: [iphone,ipad,mobileweb]
  - name: textAlign
    summary: |
        Text alignment, specified using one of the <Titanium.UI> text alignment constants: [TEXT_ALIGNMENT_LEFT](Titanium.UI.TEXT_ALIGNMENT_LEFT), [TEXT_ALIGNMENT_CENTER](Titanium.UI.TEXT_ALIGNMENT_CENTER), or [TEXT_ALIGNMENT_RIGHT](Titanium.UI.TEXT_ALIGNMENT_RIGHT).
    type: [String,Number]
    default: <Titanium.UI.TEXT_ALIGNMENT_LEFT>
  - name: value
    summary: Value of the text area.
    type: String
  - name: scrollable
    summary: Can the text area be scrolled?
    platforms: [iphone, ipad]
    type: Boolean
    default: true

examples:
  - title: Basic Text Area with Customizations
    example: |
        This example creates a highly customized text area.
        
            var ta1 = Titanium.UI.createTextArea({
            	value : 'I am a textarea',
            	height : 70,
            	width : 300,
            	top : 60,
            	font : {fontSize:20,fontFamily:'Marker Felt', fontWeight:'bold'},
            	color : '#888',
            	textAlign : 'left',
            	appearance : Titanium.UI.KEYBOARD_APPEARANCE_ALERT,	
            	keyboardType : Titanium.UI.KEYBOARD_NUMBERS_PUNCTUATION,
            	returnKeyType : Titanium.UI.RETURNKEY_EMERGENCY_CALL,
            	borderWidth : 2,
            	borderColor : '#bbb',
            	borderRadius : 5
            });
        
  - title: Text Area with Custom Keyboard Toolbar (iOS)
    example: |
        On iOS, a configurable toolbar can be displayed above the virtual keyboard. 
        Toolbars can be used with both text areas and text fields. See <Titanium.UI.iOS.Toolbar>
        for more information.

        This code excerpt creates a text area with a toolbar:
  
        Example using a custom keyboard toolbar:
    
            var send = Titanium.UI.createButton({
                title : 'Send',
                style : Titanium.UI.iPhone.SystemButtonStyle.DONE,
            });
            
            var camera = Titanium.UI.createButton({
                systemButton : Titanium.UI.iPhone.SystemButton.CAMERA,
            });
            
            var cancel = Titanium.UI.createButton({
                systemButton : Titanium.UI.iPhone.SystemButton.CANCEL
            });
            
            var flexSpace = Titanium.UI.createButton({
                systemButton : Titanium.UI.iPhone.SystemButton.FLEXIBLE_SPACE
            });
            
            var textarea = Titanium.UI.createTextArea({
                color : '#000',
                value : 'Focus to see keyboard with toolbar',
                height : 120,
                width : 300,
                top : 10,
                borderColor : '#000',
                keyboardToolbar : [cancel, flexSpace, camera, flexSpace, send],
                keyboardToolbarColor : '#999',
                keyboardToolbarHeight : 40,
            });

