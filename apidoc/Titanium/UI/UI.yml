---
name: Titanium.UI
summary: The main <Titanium.UI> module.  
description:  |
    The UI module is responsible for native user-interface components and interaction inside 
    Titanium.  The goal of the UI module is to provide a native experience along with native 
    performance by compiling Javascript code into their native counterparts as part of the 
    build process.

    #### Design
    
    The UI module is broken down into 3 major area:

    * **Views** - [Views](Titanium.UI.View-object.html) are containers that
    host visual elements such as controls or other views.  Views can have
    their properties customized, such as their border color and radius, can
    fire events such as swipe events or touches, and can optionally contain a
    hierarchy or other views as children. In Titanium, most views are
    specialized to perform both a visual function and set of interaction
    behaviors such as [Table View](Titanium.UI.TableView-object.html) or
    [Coverflow View](Titanium.UI.CoverFlowView-object.html).  Views are always
    named with the suffix `View`.

    * **Controls** - controls, or sometimes referred as widgets, are visual
    elements such as [sliders](Titanium.UI.Slider-object.html),
    [buttons](Titanium.UI.Button-object.html) and
    [switches](Titanium.UI.Switch-object.html). They provide a visual element
    which has a defined behavior and typical have special configuration and
    special events.  Controls themselves are views and also inherit a views
    properties, functions and events.

    * **Windows** - [Windows](Titanium.UI.Window-object.html) are typically
    top-level visual constructs that are the main part of your interface. An
    application will always have at least one window and windows can take
    different shapes and sizes, can have display and interaction properties
    such as fullscreen or modal and can be customized, such as changing their
    opacity or background color. Windows themselves are views and also inherit
    a views properties, functions and events. There are a few specialization
    of Windows such as a [Tab Group](Titanium.UI.TabGroup-object.html) which
    offer additional behavior beyond the basic Window.


    Titanium uses the [Factory
    Pattern](http://en.wikipedia.org/wiki/Factory_method_pattern) for
    constructing objects and a general naming pattern for APIs.  For example,
    to construct a [Alert Dialog](Titanium.UI.AlertDialog-object.html), you
    call the method <Titanium.UI.createAlertDialog>.  To create a
    [TextArea](Titanium.UI.TextArea-object.html), you call the method
    <Titanium.UI.createTextArea>.  Once an object is created, it will be
    available until it goes out of scope.

    #### Optimizations

    UI objects are optimized by Titanium to not be realized into the drawing
    context and placed into the device UI surface until needed.  That means that
    you can create UI objects, set their properties and add them to their
    hierarchy without much worry about memory or performance.  When the native
    drawing surface needs to render a specific view or control, Titanium will
    automatically create the view as needed.  Additionally, Titanium is
    optimized to also release memory once the view is no longer needed, on
    screen or in low memory situations.  However, it's a good idea to help
    Titanium along in certain cases where you are no longer using objects.  For
    example, you should call `close` on a
    [Window](Titanium.UI.Window-object.html) instance when you are no longer
    using it.  You can safely call `open` on the window again to re-open it.

    #### Global Context and Threading

    Be careful with the objects that are created in `app.js` but only used once.
    Since the `app.js` context is global and generally is not garbage collected
    until the application exits, you should think about the design of your
    application as it relates to this fact.

    [Window](Titanium.UI.Window-object.html) objects that are opened up with the
    `url` property to another JavaScript file provide a nice way to decompose
    your application into smaller units. 
    
    Additionally, Window objects created with a `url` value run in a
    separate JavaScript context and thread. While all UI processing is done on
    the main UI thread, other processing inside a Window or the `app.js` that
    does not have UI interaction will run in its own thread.

    The other benefit of using the `url` property is that when the
    window is closed, resources allocated in the window's context can be
    immediately cleaned up, saving resources such as memory and CPU.

    For more information, see the sections "Sub-contexts" and "Passing Data Between Contexts"
    on the [Window](Titanium.UI.Window) reference page.

    #### Portability
    
    Titanium components are designed to be portable across as many platforms as
    it supports.  However, there are cases where a device either does not
    support a specific feature or capability or where it support additional
    functionality.  For cases where the device OS supports capabilities that
    other platforms do not, we attempt to place those capabilities in a separate
    namespace, such as <Titanium.UI.iPhone>.
    However, in cases where the control is in a common namespace and support
    additional features, we continue to place that functionality directly on the
    object.
    
    #### Events
    
    Event listeners must be defined before their respective events are likely to 
    be fired, otherwise they are not guaranteed to be called. The open and focus 
    [Window](Titanium.UI.Window-object.html) event listeners, for instance, must 
    be defined before the window is opened.

    Evaluating events as late as possible while bearing the above consideration 
    in mind, however, can significantly improve application responsiveness. For 
    example, an event listener for a click event may be defined after the parent 
    window has been opened.
extends: Titanium.Module
since: "0.4"
methods:
  - name: create2DMatrix
    summary: Creates are returns an instance of <Titanium.UI.2DMatrix>.
    parameters:
      - name: parameters
        summary: |
            A dictionary object specifying the initial transformation of the object.
        type: MatrixCreationDict
        optional: true
    returns:
        type: Titanium.UI.2DMatrix
properties:
  - name: ANIMATION_CURVE_EASE_IN
    summary: Use the animation curve constants in <Titanium.UI.iOS> instead.
    platforms: [iphone, ipad]
    type: Number
    permission: read-only
    deprecated:
        since: "1.8.0"
  - name: ANIMATION_CURVE_EASE_IN_OUT
    summary: Use the animation curve constants in <Titanium.UI.iOS> instead.
    platforms: [iphone, ipad]
    type: Number
    permission: read-only
    deprecated:
        since: "1.8.0"
  - name: ANIMATION_CURVE_EASE_OUT
    summary: Use the animation curve constants in <Titanium.UI.iOS> instead.
    platforms: [iphone, ipad]
    type: Number
    permission: read-only
    deprecated:
        since: "1.8.0"
  - name: ANIMATION_CURVE_LINEAR
    summary: Use the animation curve constants in <Titanium.UI.iOS> instead.
    platforms: [iphone, ipad]
    type: Number
    permission: read-only
    deprecated:
        since: "1.8.0"
  - name: AUTODETECT_ADDRESS
    summary: Use the text auto-detection constants in <Titanium.UI.iOS> instead.
    platforms: [iphone, ipad]
    osver: {ios: {min: "4.0"}}
    permission: read-only
    type: Number
    deprecated:
        since: "1.8.0"
  - name: AUTODETECT_ALL
    summary: Use the text auto-detection constants in <Titanium.UI.iOS> instead.
    platforms: [iphone, ipad]
    type: Number
    permission: read-only
    deprecated:
        since: "1.8.0"
  - name: AUTODETECT_CALENDAR
    summary: Use the text auto-detection constants in <Titanium.UI.iOS> instead.
    platforms: [iphone, ipad]
    osver: {ios: {min: "4.0"}}
    type: Number
    permission: read-only
    deprecated:
        since: "1.8.0"
  - name: AUTODETECT_LINK
    summary: Use the text auto-detection constants in <Titanium.UI.iOS> instead.
    platforms: [iphone, ipad]
    type: Number
    permission: read-only
    deprecated:
        since: "1.8.0"
  - name: AUTODETECT_NONE
    summary: Use the text auto-detection constants in <Titanium.UI.iOS> instead.
    platforms: [iphone, ipad]
    type: Number
    permission: read-only
    deprecated:
        since: "1.8.0"
  - name: AUTODETECT_PHONE
    summary: Use the text auto-detection constants in <Titanium.UI.iOS> instead.
    platforms: [iphone, ipad]
    type: Number
    permission: read-only
    deprecated:
        since: "1.8.0"
  - name: BLEND_MODE_CLEAR
    summary: Use the blend mode constants in <Titanium.UI.iOS> instead.
    platforms: [android, iphone, ipad]
    type: Number
    permission: read-only
    deprecated:
        since: "1.8.0"
  - name: BLEND_MODE_COLOR
    summary: Use the blend mode constants in <Titanium.UI.iOS> instead.
    platforms: [iphone, ipad]
    type: Number
    permission: read-only
    deprecated:
        since: "1.8.0"
  - name: BLEND_MODE_COLOR_BURN
    summary: Use the blend mode constants in <Titanium.UI.iOS> instead.
    platforms: [iphone, ipad]
    type: Number
    permission: read-only
    deprecated:
        since: "1.8.0"
  - name: BLEND_MODE_COLOR_DODGE
    summary: Use the blend mode constants in <Titanium.UI.iOS> instead.
    platforms: [iphone, ipad]
    type: Number
    permission: read-only
    deprecated:
        since: "1.8.0"
  - name: BLEND_MODE_COPY
    summary: Use the blend mode constants in <Titanium.UI.iOS> instead.
    platforms: [iphone, ipad]
    type: Number
    permission: read-only
    deprecated:
        since: "1.8.0"
  - name: BLEND_MODE_DARKEN
    summary: Use the blend mode constants in <Titanium.UI.iOS> instead.
    platforms: [iphone, ipad]
    type: Number
    permission: read-only
    deprecated:
        since: "1.8.0"
  - name: BLEND_MODE_DESTINATION_ATOP
    summary: Use the blend mode constants in <Titanium.UI.iOS> instead.
    platforms: [iphone, ipad]
    type: Number
    permission: read-only
    deprecated:
        since: "1.8.0"
  - name: BLEND_MODE_DESTINATION_IN
    summary: Use the blend mode constants in <Titanium.UI.iOS> instead.
    platforms: [iphone, ipad]
    type: Number
    permission: read-only
    deprecated:
        since: "1.8.0"
  - name: BLEND_MODE_DESTINATION_OUT
    summary: Use the blend mode constants in <Titanium.UI.iOS> instead.
    platforms: [iphone, ipad]
    type: Number
    permission: read-only
    deprecated:
        since: "1.8.0"
  - name: BLEND_MODE_DESTINATION_OVER
    summary: Use the blend mode constants in <Titanium.UI.iOS> instead.
    platforms: [iphone, ipad]
    type: Number
    permission: read-only
    deprecated:
        since: "1.8.0"
  - name: BLEND_MODE_DIFFERENCE
    summary: Use the blend mode constants in <Titanium.UI.iOS> instead.
    platforms: [iphone, ipad]
    type: Number
    permission: read-only
    deprecated:
        since: "1.8.0"
  - name: BLEND_MODE_EXCLUSION
    summary: Use the blend mode constants in <Titanium.UI.iOS> instead.
    platforms: [iphone, ipad]
    type: Number
    permission: read-only
    deprecated:
        since: "1.8.0"
  - name: BLEND_MODE_HARD_LIGHT
    summary: Use the blend mode constants in <Titanium.UI.iOS> instead.
    platforms: [iphone, ipad]
    type: Number
    permission: read-only
    deprecated:
        since: "1.8.0"
  - name: BLEND_MODE_HUE
    summary: Use the blend mode constants in <Titanium.UI.iOS> instead.
    platforms: [iphone, ipad]
    type: Number
    permission: read-only
    deprecated:
        since: "1.8.0"
  - name: BLEND_MODE_LIGHTEN
    summary: Use the blend mode constants in <Titanium.UI.iOS> instead.
    platforms: [iphone, ipad]
    type: Number
    deprecated:
        since: "1.8.0"
    permission: read-only
  - name: BLEND_MODE_LUMINOSITY
    summary: Use the blend mode constants in <Titanium.UI.iOS> instead.
    platforms: [iphone, ipad]
    type: Number
    permission: read-only
    deprecated:
        since: "1.8.0"
  - name: BLEND_MODE_MULTIPLY
    summary: Use the blend mode constants in <Titanium.UI.iOS> instead.
    platforms: [iphone, ipad]
    type: Number
    permission: read-only
    deprecated:
        since: "1.8.0"
  - name: BLEND_MODE_NORMAL
    summary: Use the blend mode constants in <Titanium.UI.iOS> instead.
    platforms: [iphone, ipad]
    type: Number
    permission: read-only
    deprecated:
        since: "1.8.0"
  - name: BLEND_MODE_OVERLAY
    summary: Use the blend mode constants in <Titanium.UI.iOS> instead.
    platforms: [iphone, ipad]
    type: Number
    permission: read-only
    deprecated:
        since: "1.8.0"
  - name: BLEND_MODE_PLUS_DARKER
    summary: Use the blend mode constants in <Titanium.UI.iOS> instead.
    platforms: [iphone, ipad]
    type: Number
    permission: read-only
    deprecated:
        since: "1.8.0"
  - name: BLEND_MODE_PLUS_LIGHTER
    summary: Use the blend mode constants in <Titanium.UI.iOS> instead.
    platforms: [iphone, ipad]
    type: Number
    permission: read-only
    deprecated:
        since: "1.8.0"
  - name: BLEND_MODE_SATURATION
    summary: Use the blend mode constants in <Titanium.UI.iOS> instead.
    platforms: [iphone, ipad]
    type: Number
    permission: read-only
    deprecated:
        since: "1.8.0"
  - name: BLEND_MODE_SCREEN
    summary: Use the blend mode constants in <Titanium.UI.iOS> instead.
    platforms: [iphone, ipad]
    type: Number
    permission: read-only
    deprecated:
        since: "1.8.0"
  - name: BLEND_MODE_SOFT_LIGHT
    summary: Use the blend mode constants in <Titanium.UI.iOS> instead.
    platforms: [iphone, ipad]
    type: Number
    permission: read-only
    deprecated:
        since: "1.8.0"
  - name: BLEND_MODE_SOURCE_ATOP
    summary: Use the blend mode constants in <Titanium.UI.iOS> instead.
    platforms: [iphone, ipad]
    type: Number
    permission: read-only
    deprecated:
        since: "1.8.0"
  - name: BLEND_MODE_SOURCE_IN
    summary: Use the blend mode constants in <Titanium.UI.iOS> instead.
    platforms: [iphone, ipad]
    type: Number
    permission: read-only
    deprecated:
        since: "1.8.0"
  - name: BLEND_MODE_SOURCE_OUT
    summary: Use the blend mode constants in <Titanium.UI.iOS> instead.
    platforms: [iphone, ipad]
    type: Number
    permission: read-only
    deprecated:
        since: "1.8.0"
  - name: BLEND_MODE_XOR
    summary: Use the blend mode constants in <Titanium.UI.iOS> instead.
    platforms: [iphone, ipad]
    type: Number
    permission: read-only
    deprecated:
        since: "1.8.0"
  - name: FACE_DOWN
    summary: Constant value for face-down orientation.
    platforms: [android, iphone, ipad]
    type: Number
    permission: read-only
  - name: FACE_UP
    summary: Constant value for face-up orientation.
    platforms: [android, iphone, ipad]
    type: Number
    permission: read-only
  - name: INPUT_BORDERSTYLE_BEZEL
    summary: Use a bezel-style border on the input field.
    platforms: [android, iphone, ipad]
    type: Number
    permission: read-only
  - name: INPUT_BORDERSTYLE_LINE
    summary: Use a simple line border on the input field.
    platforms: [android, iphone, ipad]
    type: Number
    permission: read-only
  - name: INPUT_BORDERSTYLE_NONE
    summary: Use no border on the input field.
    platforms: [android, iphone, ipad]
    type: Number
    permission: read-only
  - name: INPUT_BORDERSTYLE_ROUNDED
    summary: Use a rounded-rectangle border on the input field.
    platforms: [android, iphone, ipad]
    type: Number
    permission: read-only
  - name: INPUT_BUTTONMODE_ALWAYS
    summary: Always show buttons on the input field.
    type: Number
    permission: read-only
  - name: INPUT_BUTTONMODE_NEVER
    summary: Never show buttons on the input field.
    type: Number
    permission: read-only
  - name: INPUT_BUTTONMODE_ONBLUR
    summary: Show buttons on the input field when it loses focus.
    type: Number
    permission: read-only
  - name: INPUT_BUTTONMODE_ONFOCUS
    summary: Show buttons on the input field when it gains focus.
    type: Number
    permission: read-only
  - name: KEYBOARD_APPEARANCE_ALERT
    summary: Use a keyboard appearance suitable for entering text on an alert.
    platforms: [android, iphone, ipad]
    type: Number
    permission: read-only
  - name: KEYBOARD_APPEARANCE_DEFAULT
    summary: Use the default keyboard appearance.
    platforms: [android, iphone, ipad]
    type: Number
    permission: read-only
  - name: KEYBOARD_ASCII
    summary: Use an ASCII keyboard.
    description: |
        Note: on MobileWeb, `KEYBOARD_ASCII` is the same as `KEYBOARD_DEFAULT`.
    type: Number
    permission: read-only
  - name: KEYBOARD_DEFAULT
    summary: Use the default keyboard.
    description: |
        Note: on MobileWeb, `KEYBOARD_DEFAULT` is the same as `KEYBOARD_ASCII`.
    type: Number
    permission: read-only
  - name: KEYBOARD_EMAIL
    summary: Use a keyboard suitable for composing email.
    description: |
        Note: on MobileWeb, if you enable `passwordType`, the `keyboardType` value will be overridden with `KEYBOARD_DEFAULT`.
    type: Number
    permission: read-only
  - name: KEYBOARD_NAMEPHONE_PAD
    summary: Use a keyboard suitable for entering names and phone numbers.
    platforms: [android, iphone, ipad]
    type: Number
    permission: read-only
  - name: KEYBOARD_NUMBERS_PUNCTUATION
    summary: Use a keyboard with numbers and punctuation only.
    platforms: [android, iphone, ipad]
    type: Number
    permission: read-only
  - name: KEYBOARD_NUMBER_PAD
    summary: Use a keyboard with a number pad only.
    description: |
        Note: on MobileWeb, if you enable `passwordType`, the `keyboardType` value will be overridden with `KEYBOARD_DEFAULT`.
    type: Number
    permission: read-only
  - name: KEYBOARD_PHONE_PAD
    summary: Use a keyboard with a phone-style number pad.
    description: |
        Note: on MobileWeb, if you enable `passwordType`, the `keyboardType` value will be overridden with `KEYBOARD_DEFAULT`.
    type: Number
    permission: read-only
  - name: KEYBOARD_URL
    summary: Use an keyboard optimized for entering URLs.
    description: |
        Note: on MobileWeb, if you enable `passwordType`, the `keyboardType` value will be overridden with `KEYBOARD_DEFAULT`.
    type: Number
    permission: read-only
  - name: LANDSCAPE_LEFT
    summary: Standard landscape orientation (home button on left).
    platforms: [android, iphone, ipad]
    type: Number
    permission: read-only
  - name: LANDSCAPE_RIGHT
    summary: Reverse landscape orientation (home button on right).
    platforms: [android, iphone, ipad]
    type: Number
    permission: read-only
  - name: NOTIFICATION_DURATION_LONG
    summary: Specifies a long duration for an Android Toast notification (<Titanium.UI.Notification>).
    platforms: [android]
    type: Number
    permission: read-only
  - name: NOTIFICATION_DURATION_SHORT
    summary: Specifies a short duration for an Android Toast notification (<Titanium.UI.Notification>).
    platforms: [android]
    type: Number
    permission: read-only
  - name: PICKER_TYPE_COUNT_DOWN_TIMER
    summary: Use a picker with a countdown timer appearance, showing hours and minutes.
    description: |
        For an actual countdown timer, the application is responsible for setting a timer 
        to update the picker values.
    platforms: [android, iphone, ipad]
    type: Number
    permission: read-only
  - name: PICKER_TYPE_DATE
    summary: Use a date picker.
    platforms: [android, iphone, ipad]
    type: Number
    permission: read-only
  - name: PICKER_TYPE_DATE_AND_TIME
    summary: Use a date and time picker.
    platforms: [android, iphone, ipad]
    type: Number
    permission: read-only
  - name: PICKER_TYPE_PLAIN
    summary: Use a plain picker (for values other than date or time).
    platforms: [android, iphone, ipad]
    type: Number
    permission: read-only
  - name: PICKER_TYPE_TIME
    summary: Use a time picker.
    platforms: [android, iphone, ipad]
    type: Number
    permission: read-only
  - name: PORTRAIT
    summary: Orientation constant for portrait mode orientation.
    platforms: [android, iphone, ipad]
    type: Number
    permission: read-only
  - name: RETURNKEY_DEFAULT
    summary: Use the default return key on the virtual keyboard.
    description: |
        In Mobile Web, the default return key label depends on the mobile browser. For Mobile Web
        on iOS devices, the default label is "return"; on Android devices it is "Go".
    type: Number
    permission: read-only
  - name: RETURNKEY_DONE
    summary: Set the return key text to "Done".
    platforms: [android, iphone, ipad]
    type: Number
    permission: read-only
  - name: RETURNKEY_EMERGENCY_CALL
    summary: Set the return key text to "Emergency Call".
    platforms: [android, iphone, ipad]
    type: Number
    permission: read-only
  - name: RETURNKEY_GO
    summary: Set the return key text to "Go".
    type: Number
    permission: read-only
  - name: RETURNKEY_GOOGLE
    summary: Set the return key text to "Google".
    description: |
        In Mobile Web, the default return key label depends on the mobile browser. For Mobile Web
        on iOS devices, the default label is "return"; on Android devices it is "Go".
    type: Number
    permission: read-only
  - name: RETURNKEY_JOIN
    summary: Set the return key text to "Join".
    platforms: [android, iphone, ipad]
    type: Number
    permission: read-only
  - name: RETURNKEY_NEXT
    summary: Set the return key text to "Next".
    platforms: [android, iphone, ipad]
    type: Number
    permission: read-only
  - name: RETURNKEY_ROUTE
    summary: Set the return key text to "Route".
    platforms: [android, iphone, ipad]
    type: Number
    permission: read-only
  - name: RETURNKEY_SEARCH
    summary: Set the return key text to "Search".
    description: |
        In Mobile Web, the default return key label depends on the mobile browser. For Mobile Web
        on iOS devices, the default label is "return"; on Android devices it is "Go".
    type: Number
    permission: read-only
  - name: RETURNKEY_SEND
    summary: Set the return key text to "Send".
    platforms: [android, iphone, ipad]
    type: Number
    permission: read-only
  - name: RETURNKEY_YAHOO
    summary: Set the return key text to "Yahoo".
    description: |
        In Mobile Web, the default return key label depends on the mobile browser. For Mobile Web
        on iOS devices, the default label is "return"; on Android devices it is "Go".
    type: Number
    permission: read-only
  - name: TEXT_ALIGNMENT_CENTER
    summary: Center align text.
    platforms: [android, iphone, ipad]
    type: Number
    permission: read-only
  - name: TEXT_ALIGNMENT_LEFT
    summary: Left align text.
    platforms: [android, iphone, ipad]
    type: Number
    permission: read-only
  - name: TEXT_ALIGNMENT_RIGHT
    summary: Right align text.
    platforms: [android, iphone, ipad]
    type: Number
    permission: read-only
  - name: TEXT_AUTOCAPITALIZATION_ALL
    summary: Auto-capitalize all text in the input field.
    type: Number
    permission: read-only
  - name: TEXT_AUTOCAPITALIZATION_NONE
    summary: Do not auto-capitalize.
    type: Number
    permission: read-only
  - name: TEXT_AUTOCAPITALIZATION_SENTENCES
    summary: Use sentence-style auto-capitalization in the input field.
    type: Number
    permission: read-only
  - name: TEXT_AUTOCAPITALIZATION_WORDS
    summary: Auto-capitalize the first letter of each word in the input field.
    description: |
        Mobile Web does not support this because it would interfere with the native capitalization of the mobile browser.
    platforms: [android, iphone, ipad]
    type: Number
    permission: read-only
  - name: TEXT_VERTICAL_ALIGNMENT_BOTTOM
    summary: Align text to the bottom of the view.
    platforms: [android, iphone, ipad]
    type: Number
    permission: read-only
  - name: TEXT_VERTICAL_ALIGNMENT_CENTER
    summary: Vertically align text to the center of the view.
    platforms: [android, iphone, ipad]
    type: Number
    permission: read-only
  - name: TEXT_VERTICAL_ALIGNMENT_TOP
    summary: Align text to the top of the view.
    platforms: [android, iphone, ipad]
    type: Number
    permission: read-only
  - name: UNKNOWN
    summary: Orientation constant representing an unknown orientation.
    type: Number
    permission: read-only
  - name: UPSIDE_PORTRAIT
    summary: Orientation constant for inverted portait orientation.
    type: Number
    permission: read-only
  - name: backgroundColor
    summary: Sets the background color of the master view (when there are no windows or other top-level controls displayed).
    description: |
        The default background color may also show through if you use semi-transparent 
        windows.
    type: String
    permission: read-only
  - name: backgroundImage
    summary: Local path or URL to an image file for setting a background for the master view (when there are no windows or other top-level controls displayed).
    description: |
        The default background image may also show through if you use semi-transparent 
        windows.
    type: String
  - name: currentTab
    summary: The currently active tab, if a tab group is open.
    description: |
        If no tab group is open, this value is undefined.
    type: Titanium.UI.Tab
  - name: currentWindow
    summary: The active window associated with the executing JavaScript context.
    type: Titanium.UI.Window
    permission: read-only
  - name: orientation
    deprecated: {since: "1.7.2"}
    summary: Use <Titanium.UI.Window.orientationModes> instead.
    description:  |
        When set, this will update the orientation of the current window to the specified 
        orientation value.
    platforms: [android, iphone, ipad]
    type: Number
