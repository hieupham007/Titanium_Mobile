---
name: Titanium.UI.TextField
summary: A single line text field. 
description: Use the <Titanium.UI.createTextField> method to create a text field.
extends: Titanium.UI.View
since: "0.8"
methods:
  - name: blur
    summary: Forces the field to lose focus.
  - name: focus
    summary: Forces the field to gain focus.
  - name: hasText
    summary: Returns `true` if the field contains text, `false` if it is empty.
events:
  - name: blur
    summary: Fired when the field loses focus.
    properties:
      - name: value
        summary: Value of the field at the time of the event.
  - name: change
    summary: Fired when the field value changes.
    properties:
      - name: value
        summary: New value of the field.
  - name: focus
    summary: Fired when the field gains focus.
    properties:
      - name: value
        summary: Value of the field at the time of the event.
  - name: return
    summary: Fired when the return key is pressed on the keyboard.
properties:
  - name: appearance
    summary: Determines the appearance of the keyboard displayed when this field is focused.
    description: |
        Specify one of the following constants from <Titanium.UI>: 
        [KEYBOARD_APPEARANCE_ALERT](Titanium.UI.KEYBOARD_APPEARANCE_ALERT), or
        [KEYBOARD_APPEARANCE_DEFAULT](Titanium.UI.KEYBOARD_APPEARANCE_DEFAULT).
    type: Number
    platforms: [iphone, ipad]
  - name: autocapitalization
    summary: Determines how text is capitalized during typing. 
    description: |
        Specify one of the following constants from <Titanium.UI>: 
        [TEXT_AUTOCAPITALIZATION_NONE](Titanium.UI.TEXT_AUTOCAPITALIZATION_NONE), 
        [TEXT_AUTOCAPITALIZATION_WORDS](Titanium.UI.TEXT_AUTOCAPITALIZATION_WORDS), 
        [TEXT_AUTOCAPITALIZATION_SENTENCES](Titanium.UI.TEXT_AUTOCAPITALIZATION_SENTENCES), or 
        [TEXT_AUTOCAPITALIZATION_ALL](Titanium.UI.TEXT_AUTOCAPITALIZATION_ALL).

        For Mobile Web, `TEXT_AUTOCAPITALIZATION_WORDS` is unsupported.
    type: Number
  - name: autocorrect
    summary: If true, allows the input field to autocorrect misspelled words.
    type: Boolean
  - name: borderStyle
    summary: Border style for the field. 
    description: Specify one of the `INPUT_BORDERSTYLE` constants defined in [Titanium.UI](Titanium.UI.INPUT_BORDERSTYLE_BEZEL).
    type: Number
  - name: clearButtonMode
    summary: When to display the clear button. 
    description: |
        Specify one of the following  <Titanium.UI> constants: 
        [INPUT_BUTTONMODE_ALWAYS](Titanium.UI.INPUT_BUTTONMODE_ALWAYS), 
        [INPUT_BUTTONMODE_NEVER](Titanium.UI.INPUT_BUTTONMODE_NEVER), 
        [INPUT_BUTTONMODE_ONBLUR](Titanium.UI.INPUT_BUTTONMODE_ONBLUR), or 
        [INPUT_BUTTONMODE_ONFOCUS](Titanium.UI.INPUT_BUTTONMODE_ONFOCUS).
    type: Number
    platforms: [iphone, ipad]
  - name: clearOnEdit
    summary: Should the value of the field be cleared when the user starts editing?
    type: Boolean
  - name: editable
    summary: Is the field editable?
    type: Boolean
    default: true
  - name: enabled
    summary: Is the field enabled?
    type: Boolean
    default: true
  - name: font
    summary: Font to use for text.
    type: Font
  - name: hintText
    summary: Hint text to display when the field is unfocused.
    type: String
  - name: keyboardToolbar
    summary: Array of toolbar button objects to be used when the keyboard is displayed.
    type: Array<Object>
    platforms: [iphone, ipad]
  - name: keyboardToolbarColor
    summary: Color of the keyboard toolbar.
    type: String
    platforms: [iphone, ipad]
  - name: keyboardToolbarHeight
    summary: Height of the keyboard toolbar.
    type: Number
    platforms: [iphone, ipad]
  - name: keyboardType
    summary: Specifies the keyboard type to display when this field is focused, such as [KEYBOARD_EMAIL](Titanium.UI.KEYBOARD_EMAIL) or [KEYBOARD_NUMBER_PAD](Titanium.UI.KEYBOARD_NUMBER_PAD).
    description: |
        Specify one of the `KEYBOARD` constants from <Titanium.UI>.
        When asking for a specific kind of input, such as a phone number or email 
        address, you should always specify the appropriate keyboard type.
    type: Number
    default: the platform's default keyboard
  - name: leftButton
    summary: Left button view. Using an object other than a [Button](Titanium.UI.Button) may have unpredictable results.
    type: Object
    platforms: [iphone, ipad]
  - name: leftButtonMode
    summary: When to display the left button view. 
    description: |
        Specify one of the following  <Titanium.UI> constants: 
        [INPUT_BUTTONMODE_ALWAYS](Titanium.UI.INPUT_BUTTONMODE_ALWAYS), 
        [INPUT_BUTTONMODE_NEVER](Titanium.UI.INPUT_BUTTONMODE_NEVER), 
        [INPUT_BUTTONMODE_ONBLUR](Titanium.UI.INPUT_BUTTONMODE_ONBLUR), or 
        [INPUT_BUTTONMODE_ONFOCUS](Titanium.UI.INPUT_BUTTONMODE_ONFOCUS).
    type: Number
    platforms: [iphone, ipad]
  - name: leftButtonPadding
    summary: Padding between the left button and the edge of the field.
    type: Number
    platforms: [android, iphone, ipad]
  - name: minimumFontSize
    summary: Minimum size of the font when the font is sized based on the contents.  Enables font scaling to fit.
    type: Number
    platforms: [iphone, ipad]
  - name: paddingLeft
    summary: Left padding of the text field.
    type: Number
    platforms: [iphone, ipad]
  - name: paddingRight
    summary: Right padding of the text field.
    type: Number
    platforms: [iphone, ipad]
  - name: passwordMask
    summary: Set to `true` to hide entered characters. 
    description: |
        On Mobile Web, if you set a `keyboardType` and enable the `passwordMask`, the `passwordMask` will always take
        precedence and the default keyboard will be used.

        Note: on iOS, `passwordMask` *must* be specified when the text field is created.
    type: Boolean
    default: false
  - name: returnKeyType
    summary: Specifies the text to display on the keyboard **Return** key when this field is focused.
    description: |
        Specify one of the `RETURNKEY` constants from <Titanium.UI>.

        Mobile Web on iOS devices supports [RETURNKEY_DEFAULT](Titanium.UI.RETURNKEY_DEFAULT),
        [RETURNKEY_GO](Titanium.UI.RETURNKEY_GO), [RETURNKEY_GOOGLE](Titanium.UI.RETURNKEY_GOOGLE),
        [RETURNKEY_SEARCH](Titanium.UI.RETURNKEY_SEARCH), and [RETURNKEY_YAHOO](Titanium.UI.RETURNKEY_YAHOO).
        `RETURNKEY_GOOGLE`, `RETURNKEY_SEARCH`, and `RETURNKEY_YAHOO` all display the word "Search".

        Mobile Web on Android devices will only display "Go" regardless of which `RETURNKEY` type is used.
    type: Number
    default: the platform's default return key
  - name: rightButton
    summary: Right button view. 
    description: Using an object other than a [Button](Titanium.UI.Button) may have 
        unpredictable results.
    type: Object
    platforms: [iphone, ipad]
  - name: rightButtonMode
    summary: When to display the right button view. 
    description: |
        Specify one of the following  <Titanium.UI> constants: 
        [INPUT_BUTTONMODE_ALWAYS](Titanium.UI.INPUT_BUTTONMODE_ALWAYS),     
        [INPUT_BUTTONMODE_NEVER](Titanium.UI.INPUT_BUTTONMODE_NEVER), 
        [INPUT_BUTTONMODE_ONBLUR](Titanium.UI.INPUT_BUTTONMODE_ONBLUR), or 
        [INPUT_BUTTONMODE_ONFOCUS](Titanium.UI.INPUT_BUTTONMODE_ONFOCUS).
    type: Number
    platforms: [iphone, ipad]
  - name: rightButtonPadding
    summary: Padding between the right button and the edge of the field.
    type: Number
    platforms: [iphone, ipad]
  - name: suppressReturn
    summary: Should the return key should be suppressed during entry?
    type: Boolean
    platforms: [iphone,ipad,mobileweb]
  - name: textAlign
    summary: |
        Text alignment, specified using one of the <Titanium.UI> text alignment constants: [TEXT_ALIGNMENT_LEFT](Titanium.UI.TEXT_ALIGNMENT_LEFT), [TEXT_ALIGNMENT_CENTER](Titanium.UI.TEXT_ALIGNMENT_CENTER), or [TEXT_ALIGNMENT_RIGHT](Titanium.UI.TEXT_ALIGNMENT_RIGHT).
    type: [String,Number]
    default: <Titanium.UI.TEXT_ALIGNMENT_LEFT>
  - name: value
    summary: Value of the field.
    type: String
  - name: verticalAlign
    summary: |
        Vertical alignment for the text field, specified using one of the 
        vertical alignment constants from <Titanium.UI>: 
        [TEXT_VERTICAL_ALIGNMENT_BOTTOM](Titanium.UI.TEXT_VERTICAL_ALIGNMENT_BOTTOM), 
        [TEXT_VERTICAL_ALIGNMENT_CENTER](Titanium.UI.TEXT_VERTICAL_ALIGNMENT_CENTER), or 
        [TEXT_VERTICAL_ALIGNMENT_TOP](Titanium.UI.TEXT_VERTICAL_ALIGNMENT_TOP).
    type: [Number,String]
    default: Titanium.UI.TEXT_VERTICAL_ALIGNMENT_CENTER
    platforms: [iphone, ipad, android]
  - name: maxLength
    summary: Maximum length of text field input. 
    description: Any attempt to input text beyond this length (including pasting a string 
        larger than `maxLength`) will not edit the field's contents. A value of -1 
        indicates unlimited length.
    default: -1
    type: Number
    platforms: [iphone, mobileweb]
examples:
  - title: Basic Text Field with rounded border
    example: |
        Create a simple text field with a round border style.
        
            var tf1 = Titanium.UI.createTextField({
            	color:'#336699',
            	height:35,
            	top:10,
            	left:10,
            	width:250,
            	borderStyle:Titanium.UI.INPUT_BORDERSTYLE_ROUNDED
            });
  - title: Custom Keyboard Toolbar (iOS)
    example: |
        On iOS, a configurable toolbar can be displayed above the virtual keyboard. 
        Toolbars can be used with both text areas and text fields. See <Titanium.UI.iOS.Toolbar>
        for more information.

        This code excerpt creates a text field with a toolbar:
    
            var send = Titanium.UI.createButton({
                title : 'Send',
                style : Titanium.UI.iPhone.SystemButtonStyle.DONE,
            });

            var camera = Titanium.UI.createButton({
                systemButton : Titanium.UI.iPhone.SystemButton.CAMERA,
            });

            var cancel = Titanium.UI.createButton({
                systemButton : Titanium.UI.iPhone.SystemButton.CANCEL
            });

            var flexSpace = Titanium.UI.createButton({
                systemButton : Titanium.UI.iPhone.SystemButton.FLEXIBLE_SPACE
            });

            var textfield = Titanium.UI.createTextField({
                hintText : 'Focus to see keyboard with toolbar',
                height : 35,
                width : 300,
                top : 10,
                borderStyle : Titanium.UI.INPUT_BORDERSTYLE_BEZEL,
                keyboardToolbar : [cancel, flexSpace, camera, flexSpace, send],
                keyboardToolbarColor : '#999',
                keyboardToolbarHeight : 40,
            });

